# Generated by Django 4.0.1 on 2022-01-15 14:38

import accounts.models
import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(help_text='username, email or phone number', max_length=255, unique=True, verbose_name='user')),
                ('phone', models.CharField(blank=True, max_length=13, null=True, validators=[django.core.validators.MaxLengthValidator(13, 'phone number is too long'), django.core.validators.MinLengthValidator(11, 'phone number length is too short')], verbose_name='phone')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email')),
                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name='name')),
                ('address', models.TextField(blank=True, null=True, verbose_name='address')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='', verbose_name='user picture')),
                ('background', models.ImageField(blank=True, null=True, upload_to='', verbose_name='profile background')),
                ('score', models.IntegerField(default=0, verbose_name='user score')),
                ('score_lifetime', models.IntegerField(default=0, verbose_name='user life time score')),
                ('discount_value', models.DecimalField(decimal_places=0, default=0, max_digits=9, verbose_name='user discount(value)')),
                ('discount_percent', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MaxValueValidator(100, 'percent could not be more than 100'), django.core.validators.MinValueValidator(0, 'percent could not be less than 0')], verbose_name='user discount(percent)')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('slug', models.SlugField(blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', accounts.models.MyUserManager()),
            ],
        ),
    ]
